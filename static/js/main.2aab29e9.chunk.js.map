{"version":3,"sources":["screens/images/townhall.svg","screens/images/eyesclosed.svg","screens/images/villager.svg","components/Header.js","utils/strings/strings.js","screens/TaskSelect.js","screens/CreateRoom.js","screens/Home.js","screens/JoinRoom.js","utils/mock.js","screens/WaitingRoom.js","components/VoteRadioGroup.js","screens/TownHall.js","screens/RoleAssignment.js","screens/InitiateGame.js","screens/CloseEyes.js","screens/OpenEyes.js","screens/OpenEyesMafia.js","screens/BlankDied.js","screens/MafiaVote.js","App.js","screens/MafiaRole.js","screens/VillagerRole.js","screens/VoteBreakdown.js","screens/ElectionResults.js","screens/YouDied.js","screens/GameOver.js","Main.js","serviceWorker.js","index.js","screens/images/mafia.svg"],"names":["module","exports","__webpack_require__","p","Header","classes","this","props","react_default","a","createElement","className","Paper_default","container","Typography_default","header","color","variant","title","body","children","Component","withStyles","theme","width","minWidth","padding","margin","marginTop","minHeight","paddingTop","textAlign","format","key","Strings","players","taskTwo","pathname","name","roomowner","taskThree","TaskSelect","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","components_Header","taskSelect","Card_default","card","CardContent_default","gutterBottom","pos","CardActions_default","Button_default","size","component","Link","to","button","spacing","unit","marginLeft","marginRight","display","flexWrap","justifyContent","bullet","transform","fontSize","marginBottom","params","owner","game","CreateRoom","_this","send","socketIOClient","emit","state","location","addPlayer","bind","assertThisInitialized","handleChange","event","setState","defineProperty","target","value","player","isCancelled","push","living","role","on","console","log","_this2","noValidate","autoComplete","TextField_default","InputProps","readOnly","id","label","defaultValue","textField","onChange","onClick","dense","menu","Home","updatePathname","path","input","JoinRoom","flexDirection","mockedState","mock","assign","WaitingRoom","recieveStartGame","max","length","rand","Math","floor","random","playerList","i","Redirect","socket","playerlist","mocked","ListItem_default","ListItemIcon_default","Star_default","ListItemText_default","List_default","sendStartGame","VoteRadioGroup","setVictim","choices","user","FormControlLabel_default","control","Radio_default","root","FormControl_default","formControl","FormLabel_default","RadioGroup_default","aria-label","group","concat","TownHall","victim","townHanging","tally","frontRunner","votes","voterTurnout","hangPlayer","src","icon","alt","components_VoteRadioGroup","RoleAssignment","sampleClassName","InitiateGame","CloseEyes","killPlayer","voteOver","mafiaWakeup","setTimeout","executePlayer","_this3","find","index","indexOf","splice","OpenEyes","BlankDied","MafiaVote","victims","slice","App","endpoint","test","setColor","col","document","style","backgroundColor","getElementById","innerHTML","MafiaRole","VillagerRole","VoteBreakdown","list","join","voteBreakdown","ElectionResults","election","isGameOver","mafia","winner","fromElection","screens_VoteBreakdown","YouDied","GameOver","createMuiTheme","palette","primary","blue","Main","styles","Switch","Route","exact","OpenEyesMafia","Boolean","window","hostname","match","ReactDOM","render","BrowserRouter","basename","process","src_Main","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2aab29e9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/townhall.16c2b1c8.svg\";","module.exports = __webpack_public_path__ + \"static/media/eyesclosed.d373bc79.svg\";","module.exports = __webpack_public_path__ + \"static/media/villager.3042fff4.svg\";","import React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nimport './header.css';\nconst styles = theme => ({\n  container: {\n    width: \"50%\",\n    minWidth: \"300px\",\n    padding: \"20px\",\n    margin: \"auto\",\n    marginTop: \"20px\",\n    minHeight: \"500px\"\n  },\n  body: {\n    paddingTop: \"40px\"\n  },\n  header: {\n    textAlign: \"center\"\n  }\n});\n\nclass Header extends Component {\n  render() {\n        const { classes } = this.props;\n        return (\n      <div className=\"body\">\n        <Paper  className={classes.container}>\n        <Typography className={classes.header} color=\"primary\" variant=\"h4\">\n          {this.props.title}\n        </Typography>\n        <Typography variant=\"body2\" className={classes.body}>\n          {this.props.children}\n        </Typography>\n      </Paper>\n      </div>\n    );\n  }\n}\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Header);\n","import Strings from './en.json';\n\nfunction format(key) {\n  return Strings[key];\n}\n\nexport default format;","\nimport React, { Component } from 'react';\nimport Header from '../components/Header';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport Button from '@material-ui/core/Button';\nimport format from '../utils/strings/strings';\n\n\nconst styles = theme => ({\n  taskSelect: {\n    margin: theme.spacing.unit,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  card: {\n    width: 275,\n    display: 'inline-block',\n    margin: theme.spacing.unit,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 18,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\nconst players = [\n  'jack', 'chloe', 'sindhu', 'zack'\n]\n\nconst taskTwo = {\n  pathname: \"/TownHall\", // TODO: change later\n  name: 'Player',\n  roomowner: false,\n  players: players\n}\n\nconst taskThree = {\n  pathname: \"/OpenEyesMafia\", // TODO: change later\n  name: 'Player',\n  roomowner: false,\n  players: players\n}\n\nconst testLink = '/SocketTest'; // Change this to the route you want to go to\nclass TaskSelect extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Header title={format(\"selectTask.label\")}>\n        <div className={classes.taskSelect}>\n          <Card className={classes.card}>\n            <CardContent>\n              <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                {format(\"taskOne.txt\")}\n              </Typography>\n              <Typography className={classes.pos} color=\"textSecondary\">\n                {format(\"taskOneDesp.txt\")}\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Button size=\"small\" color=\"primary\" component={Link} to='/Home' className={classes.button}>\n                {format(\"start.txt\")}\n              </Button>\n            </CardActions>\n          </Card>\n          <Card className={classes.card}>\n            <CardContent>\n              <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                {format(\"taskTwo.txt\")}\n              </Typography>\n              <Typography className={classes.pos} color=\"textSecondary\">\n                {format(\"taskTwoDesp.txt\")}\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Button size=\"small\" color=\"primary\" component={Link} to={taskTwo} className={classes.button}>\n                {format(\"start.txt\")}\n              </Button>\n            </CardActions>\n          </Card>\n          <Card className={classes.card}>\n            <CardContent>\n              <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                {format(\"taskThree.txt\")}\n              </Typography>\n              <Typography className={classes.pos} color=\"textSecondary\">\n                {format(\"taskThreeDesp.txt\")}\n              </Typography>\n            </CardContent>\n            <CardActions>\n            <Button size=\"small\" color=\"primary\" component={Link} to={taskThree} className={classes.button}>\n            {format(\"start.txt\")}\n          </Button>\n            </CardActions>\n          </Card>\n        </div>\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n              {format(\"testHere.txt\")}\n            </Typography>\n          </CardContent>\n            <Button size=\"small\" color=\"primary\" component={Link} to={testLink} className={classes.button}>\n            {format(\"start.txt\")}\n          </Button>\n        </Card>\n      </Header>\n    );\n  }\n}\nTaskSelect.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TaskSelect);","import React, { Component } from 'react';\nimport Header from '../components/Header';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Link } from 'react-router-dom';\nimport format from '../utils/strings/strings';\nimport socketIOClient from \"socket.io-client\";\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: '100%'\n  },\n  dense: {\n    marginTop: 16,\n  },\n  menu: {\n    width: 200,\n  },\n});\nconst params = {\n  pathname: \"/WaitingRoom\",\n  name: '',\n  owner: true,\n  players: [\n    'jack', 'chloe', 'sindhu', 'zack'\n  ],\n  game: \"0000\",\n}\nclass CreateRoom extends Component {\n  constructor(props) {\n    super(props);\n    this.state = props.location;\n    this.state.pathname = \"/WaitingRoom\";\n\n    this.addPlayer = this.addPlayer.bind(this);\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value,\n      });\n      params.name = event.target.value;\n    };\n  }\n\n  addPlayer(player) {\n    if (!this.isCancelled) {\n        this.state.players.push(\n            {\n            name: player,\n            living: true,\n            role: 'villager'\n            }\n            );\n        this.setState(this.state);\n    }\n  }\n\n  componentDidMount() {\n      const socket = socketIOClient(format(\"serverURL\"));\n      socket.on('add player', function(player){\n          this.addPlayer(player);\n          console.log(player); \n          }.bind(this)\n      );\n  }\n\n  componentWillUnmount() {\n      this.isCancelled = true;\n  }\n\n  // sending sockets -> add new player to game emit to server\n  send = () => {\n    const socket = socketIOClient(format(\"serverURL\"));\n    socket.emit('add player', this.state.name) \n  }\n\n  render() {\n    const { classes } = this.props;\n    \n    return (\n      <Header title={format(\"mafiaParty.label\")}>\n        <div className=\"form-container\">\n          <form className={classes.container} noValidate autoComplete=\"off\">\n            <TextField\n              InputProps={{\n                readOnly: true,\n              }}\n              id=\"game-code\"\n              label={format(\"gameCode.label\")}\n              defaultValue=\"0000\"\n              className={classes.textField}\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n            <TextField\n              id=\"outlined-name\"\n              label={format(\"name.label\")}\n              className={classes.textField}\n              value={this.state.name}\n              onChange={this.handleChange('name')}\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n          </form>\n          <Button variant=\"contained\" component={Link} to={this.state} className={classes.button} onClick={() => this.send()}>\n            {format(\"createRoom.create.txt\")}\n          </Button>\n        </div>\n      </Header>\n    );\n  }\n}\nCreateRoom.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CreateRoom);","import React, { Component } from 'react';\nimport Header from '../components/Header';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { Link } from 'react-router-dom'\nimport format from '../utils/strings/strings';\nimport './styles.css'\nimport socketIOClient from \"socket.io-client\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit,\n    },\n    input: {\n        display: 'none',\n    },\n});\n\n\nclass Home extends Component {\n    constructor(){\n        super();\n        this.addPlayer = this.addPlayer.bind(this);\n        this.state = { pathname: \"\", name: '', owner: true, game: '0000', role: '', players: []};\n    }\n\n    addPlayer(player) {\n        if (!this.isCancelled) {\n            this.state.players.push(\n                {\n                name: player,\n                living: true,\n                role: 'villager'\n                }\n                );\n            this.setState(this.state);\n        }\n    }\n    \n    componentDidMount() {\n        const socket = socketIOClient(format(\"serverURL\"));\n        socket.on('add player', function(player){\n            this.addPlayer(player);\n            console.log(player); \n            }.bind(this)\n        );\n    }\n\n    componentWillUnmount() {\n        this.isCancelled = true;\n    }\n\n    updatePathname = (path) => {\n        this.state.pathname = path;\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Header title=\"Mafia Party\">\n                <div className=\"home screen\">\n                    <div className=\"button-container\">\n                        <Button variant=\"contained\" component={Link} to={this.state} className={classes.button} \n                        onClick={() => this.updatePathname(\"/JoinRoom\")}>\n                            {format(\"home.joinRoom.txt\")}\n                        </Button>\n                        <Button variant=\"contained\" component={Link} to={this.state} className={classes.button}\n                        onClick={() => this.updatePathname(\"/CreateRoom\")}>\n                            {format(\"home.createRoom.txt\")}\n                        </Button>\n                    </div>\n                </div>\n            </Header>\n        );\n    }\n}\nHome.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Home);\n","import React, { Component } from 'react';\nimport Header from '../components/Header';\nimport Button  from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Link } from 'react-router-dom'\nimport format from '../utils/strings/strings';\nimport socketIOClient from \"socket.io-client\";\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  dense: {\n    marginTop: 16,\n  },\n  menu: {\n    width: 200,\n  },\n});\n\nconst params = {\n  pathname: \"/WaitingRoom\",\n  name: '',\n  roomowner: false,\n  players: [\n    'jack', 'chloe', 'sindhu', 'zack'\n  ],\n  game: ''\n}\n\nclass JoinRoom extends Component {\n  constructor(props) {\n      super(props);\n      this.state = props.location;\n      this.state.pathname = \"/WaitingRoom\";\n      this.state.owner = false;\n\n      this.addPlayer = this.addPlayer.bind(this);\n\n      this.handleChange = name => event => {\n        this.setState({\n          [name]: event.target.value,\n        });\n        console.log(name);\n        if (name === 'name') {\n          params.name = event.target.value;\n        }\n      };\n  }\n\n  addPlayer(player) {\n    if (!this.isCancelled) {\n        this.state.players.push(\n            {\n            name: player,\n            living: true,\n            role: 'villager'\n            }\n            );\n        this.setState(this.state);\n    }\n  }\n\n  componentDidMount() {\n      const socket = socketIOClient(format(\"serverURL\"));\n      socket.on('add player', function(player){\n          this.addPlayer(player);\n          console.log(player); \n          }.bind(this)\n      );\n  }\n\n  componentWillUnmount() {\n      this.isCancelled = true;\n  }\n  \n  // sending sockets -> add new player to game\n  send = () => {\n    const socket = socketIOClient(format(\"serverURL\"));\n    socket.emit('add player', this.state.name) \n  }\n\nrender() {\n  const { classes } = this.props;\n  \n  return (\n    <Header title={format(\"mafiaParty.label\")}>\n      <div className=\"form-container\">\n          <form className={classes.container} noValidate autoComplete=\"off\">\n              <TextField\n                  id=\"game-code\"\n                  label={format(\"gameCode.label\")}\n                  value={this.state.game}\n                  onChange={this.handleChange('game')}\n                  className={classes.textField}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n              />\n              <TextField\n                  id=\"outlined-name\"\n                  label={format(\"name.label\")}\n                  className={classes.textField}\n                  value={this.state.name}\n                  onChange={this.handleChange('name')}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  />\n          </form>\n          <Button variant=\"contained\" component={Link} to={this.state} className={classes.button} onClick={() => this.send()}>\n             {format(\"joinRoom.join.txt\")}\n          </Button>\n      </div>\n    </Header>\n  );\n}\n}\nJoinRoom.propTypes = {\nclasses: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(JoinRoom);","function mockedState(state) {\n  var mock = {};\n  mock.name = state.name || 'tester';\n  mock.owner = state.owner || false;\n  mock.game = state.game || \"H2XS9G\";\n  mock.role = state.role || \"mafia\";\n  mock.players = state.players || [\n    {\n      name: 'jack',\n      living: true,\n      role: ''\n    },\n    {\n      name: 'chloe',\n      living: true,\n      role: ''\n    },\n    {\n      name: 'sindhu',\n      living: true,\n      role: ''\n    },\n    {\n      name: 'zack',\n      living: true,\n      role: 'mafia'\n    }\n  ]\n  console.log(state);\n  console.log(mock);\n  return Object.assign(state, mock);\n}\n\nexport default mockedState;","\nimport React, { Component } from 'react';\nimport Header from '../components/Header';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport StarIcon from '@material-ui/icons/Star';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText'\nimport './styles.css'\nimport mockedState from '../utils/mock';\nimport format from '../utils/strings/strings';\nimport socketIOClient from \"socket.io-client\";\nimport { Redirect } from 'react-router-dom';\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n  },\n  input: {\n    display: 'none',\n  },\n});\n\n\nclass WaitingRoom extends Component {\n  constructor(props){\n    super(props);\n    this.state = props.location;\n    this.addPlayer = this.addPlayer.bind(this);\n    this.recieveStartGame = this.recieveStartGame.bind(this);\n  }\n\n  sendStartGame() {\n    const min = 0;\n    const max = this.state.players.length -1;\n    const rand = Math.floor(min + Math.random() * (max - min));\n\n    //everyone currently is villager\n    //give the game a villian\n    this.state.players[rand].role = 'mafia';\n\n    const socket = socketIOClient(format(\"serverURL\"));\n    socket.emit('start game', this.state.players)\n  }\n\n  recieveStartGame(playerList) {\n    this.setState({players: playerList});\n    this.setState({pathname: \"/VillagerRole\"});\n    for (var i = 0; i < this.state.players.length; i++) {\n      if(this.state.players[i].name == this.state.name && this.state.players[i].role == 'mafia') {\n        this.setState({role: 'mafia'});\n        this.setState({pathname: \"/MafiaRole\"});\n      }\n    }\n    this.Redirect = true;\n    this.setState(this.state);\n  }\n\n  componentWillMount() {\n    const socket = socketIOClient(format(\"serverURL\"));\n    socket.on('add player', function(player){\n      this.addPlayer(player);\n      console.log(player); \n      }.bind(this)\n    );\n\n    socket.on('start game', function(playerlist){\n      this.recieveStartGame(playerlist);\n      }.bind(this)\n    );\n  }\n\n  addPlayer(player) {\n    this.state.players.push(\n          {\n          name: player,\n          living: true,\n          role: 'villager'\n          }\n        );\n    this.setState(this.state);\n  }\n  \n  render() {\n    var playerList = [];\n    let mocked = mockedState(this.props.location);\n\n    for (var i = 0; i < mocked.players.length; i++) {\n      let p = mocked.players[i];\n      //Add star icon in front of player name\n      playerList.push(\n      <ListItem>\n        {mocked.name == p.name &&  <ListItemIcon><StarIcon /></ListItemIcon>}\n        <ListItemText>{p.name}</ListItemText>\n      </ListItem>);\n    }\n    const { classes } = this.props;\n\n    if (this.Redirect) {\n      return <Redirect to={this.state} />\n    }\n    return (\n      <Header title={format(\"waitingRoom.label\")}>\n        <div className=\"button-container\">\n          <TextField\n            InputProps={{\n              readOnly: true,\n            }}\n            id=\"game-code\"\n            label=\"Game Code\"\n            value={mocked.game}\n            className={classes.textField}\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n          <List id=\"list\" className=\"player-list\">\n            {playerList}\n          </List>\n\n          {mocked.owner && \n            <Button variant=\"contained\" className={classes.button} onClick={() => this.sendStartGame()}>\n                {format(\"startGame.txt\")}\n            </Button>\n          }\n        </div>\n      </Header>\n    );\n  }\n}\nWaitingRoom.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(WaitingRoom);\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport PropTypes from 'prop-types';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  formControl: {\n    margin: theme.spacing.unit * 3,\n  },\n  group: {\n    margin: `${theme.spacing.unit}px 0`,\n  },\n});\n\nclass VoteRadioGroup extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state ={};\n    this.state.value = '';\n  }\n\n  handleChange = event => {\n    this.setState({ value: event.target.value });\n    this.props.setVictim(event.target.value);\n  };\n\n\n\n  render() {\n    const { classes } = this.props;\n    var choices = [];\n    for (var i = 0; i < this.props.players.length; i++) {\n      let p = this.props.players[i];\n      if (p.living && p.name != this.props.user.name) {\n        choices.push(<FormControlLabel value={p.name} control={<Radio />} label={p.name} />);\n      }\n    }\n    return (\n      <div className={classes.root}>\n        <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">{this.props.title}</FormLabel>\n          <RadioGroup\n            aria-label={this.props.title}\n            className={classes.group}\n            value={this.state.value}\n            onChange={this.handleChange}\n          >\n            {choices}\n          </RadioGroup>\n        </FormControl>\n      </div>\n    )\n  }\n}\nVoteRadioGroup.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(VoteRadioGroup);","\n// these are required imports\nimport React, { Component } from 'react';\nimport format from '../utils/strings/strings';\n\n// uncomment if you're including the button/textfield/etc components\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\n\n// uncomment if you need these material components\nimport Button from '@material-ui/core/Button';\n//import TextField from '@material-ui/core/TextField';\nimport Header from '../components/Header';\nimport VoteRadioGroup from '../components/VoteRadioGroup';\nimport mockedState from '../utils/mock';\nimport icon from './images/townhall.svg';\n\nimport socketIOClient from \"socket.io-client\";\n\n// more components under component demos here\n// https://material-ui.com/\n\n// required if you're using the material components\nconst styles = theme => ({\n\n});\n\n// this is required, pathname should be the name of the file this one should point to\n// you should also import it and add a <Route> to Main.js\nconst params = {\n  pathname: \"/TownHall\",\n  name: '',\n  roomowner: true,\n  players: [\n    'jack', 'chloe', 'sindhu', 'zack'\n  ],\n}\n\n// template -- replace template with the component's name\nclass TownHall extends Component {\n  constructor(props) {\n    super(props);\n    this.state = props.location;\n    this.state.pathname = \"/ElectionResults\";\n    this.state.tally = {};\n    this.state.frontRunner = {name: '', votes: 0};\n    this.state.voterTurnout = 0;\n\n    this.hangPlayer = this.hangPlayer.bind(this);\n    this.handleChange = value => event => {\n      this.setState({\n        [value]: event.target.value,\n      });\n      params.name = event.target.value;\n    };\n  }\n\n  //sets the victim of the state based on the radio buttons\n  setVictim = (player) => {\n    this.setState({victim: player});\n  }\n\n  //Emits town hanging event to server\n  townHanging = () => {\n    const socket = socketIOClient(format(\"serverURL\"));\n    socket.emit('hang player', this.state.victim) \n  }\n\n  //Sockets are set here\n  componentWillMount() {\n    const socket = socketIOClient(format(\"serverURL\"));\n    socket.on('hang player', function(player){\n      this.hangPlayer(player); \n      }.bind(this)\n    );\n  }\n\n  //Used to prevent component memory leak\n  componentWillUnmount() {\n    this.isCancelled = true;\n  }\n\n  hangPlayer(player) {\n    if (!this.isCancelled) {\n      //keep track of how many people have voted so we know if everyone has voted\n      this.setState({voterTurnout: this.state.voterTurnout + 1});\n\n      //If player already has votes add 1 more. \n      if(player in this.state.tally) {\n        this.state.tally[player] = this.state.tally[player] + 1;\n      }\n      else {\n        //If player has no votes add them\n        this.state.tally[player] = 1;\n      }\n\n      //refresh the views\n      this.setState(this.state);\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    let mocked = mockedState(this.state);\n    \n    return (\n      <div className=\"town-hall\">\n        <Header title={format('townHall.title.label')}>\n          <img className=\"icon\" src={icon} alt=\"town-hall\"/>\n          <h2 className=\"town-hall town-hall-title\">Time To Discuss!</h2>\n          <p className=\"town-hall town-hall-body\">{format('townHall.description')}</p>\n          <h2 className=\"town-hall town-hall-title\">Town Hall Ballot</h2>\n          <VoteRadioGroup user={mocked.name} players={mocked.players} setVictim={this.setVictim.bind(this)}/>\n          <div className=\"centered-content\">\n            <Button variant=\"contained\" component={Link} to={this.state} className=\"confirm-button\"\n            onClick={() => this.townHanging()}>Confirm</Button>\n          </div>\n        </Header>\n      </div>\n    );\n  }\n}\nTownHall.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TownHall);","\n// these are required imports\nimport React, { Component } from 'react';\nimport format from '../utils/strings/strings';\n\n// uncomment if you're including the button/textfield/etc components\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\n\n// uncomment if you need these material components\nimport Button  from '@material-ui/core/Button';\nimport Header from '../components/Header';\nimport './styles.css';\nimport icon from './images/mafia.svg';\n\n// more components under component demos here\n// https://material-ui.com/\n\n// required if you're using the material components\nconst styles = theme => ({\n    sampleClassName: {\n    },\n  });\n\n//template -- replace template with the component's name\nclass RoleAssignment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = props.location;\n    this.state.pathname = \"/InitiateGame\";\n  }\n\n  render() {\n    const { classes } = this.props;\n    \n    return (\n      <div className=\"role-assignment\">\n      <Header title={format('roleAssignment.title.label')}>\n      <h3 className=\"role-assignment-title\">A member of the Mafia</h3>\n      <img className=\"icon\" src={icon} alt=\"mafia\"/>\n      <p>{format('mafiaRole.description')}</p>\n      <div className=\"centered-content\">\n        <Button variant=\"contained\" component={Link} to={this.state} className={classes.button}>\n          {format(\"global.next.txt\")}\n        </Button>\n        </div>\n       </Header>\n      </div>\n    );\n  }\n}\nRoleAssignment.propTypes = {\nclasses: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(RoleAssignment);","\n// these are required imports\nimport React, { Component } from 'react';\nimport format from '../utils/strings/strings';\n\n// uncomment if you're including the button/textfield/etc components\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\n\n// uncomment if you need these material components\nimport Button  from '@material-ui/core/Button';\nimport Header from '../components/Header';\n\n// more components under component demos here\n// https://material-ui.com/\n\n// required if you're using the material components\nconst styles = theme => ({\n    sampleClassName: {\n    },\n  });\n\n\n//template -- replace template with the component's name\nclass InitiateGame extends Component {\n    constructor(props) {\n      super(props);\n\n      this.state = props.location;\n      this.state.pathname = \"/CloseEyes\";\n    }\n\n  render() {\n    const { classes } = this.props;\n    \n    return (\n      <div className=\"initiate-game\">\n      <Header title={format('initiateGame.title.label')}>\n      <p>{format('initiateGame.text')}</p>\n      <div className=\"centered-content\">\n                <Button className=\"ready-button\"variant=\"contained\" component={Link} to={this.state}>{format(\"global.ready.txt\")}</Button>\n      </div>\n       </Header>\n      </div>\n    );\n  }\n}\nInitiateGame.propTypes = {\nclasses: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(InitiateGame);","\n// these are required imports\nimport React, { Component } from 'react';\nimport format from '../utils/strings/strings';\n\n// uncomment if you're including the button/textfield/etc components\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\n\n// uncomment if you need these material components\nimport Button from '@material-ui/core/Button';\nimport Header from '../components/Header';\nimport icon from './images/eyesclosed.svg';\n\nimport socketIOClient from \"socket.io-client\";\n\nimport { Redirect } from 'react-router-dom';\n\n// more components under component demos here\n// https://material-ui.com/\n\n// required if you're using the material components\nconst styles = theme => ({\n  sampleClassName: {\n  },\n});\n\n// template -- replace template with the component's name\nclass CloseEyes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = props.location;\n    this.killPlayer = this.killPlayer.bind(this);\n\n    if (this.state.role === 'mafia' && !this.state.voteOver) {\n      this.state.pathname = \"/OpenEyesMafia\";\n      this.mafiaWakeup();\n    }\n    else {\n      this.state.pathname = \"/OpenEyes\";\n      this.state.voteOver = false;\n    }\n  }\n\n  mafiaWakeup() {\n    setTimeout(() => {\n      this.setState({Redirect: true}); \n      this.setState(this.state);\n    }, 5000);\n  }\n\n  componentWillMount() {\n    const socket = socketIOClient(format(\"serverURL\"));\n    socket.on('kill player', function(player){\n      this.killPlayer(player); \n      }.bind(this)\n    );\n    socket.on('execute player', function(player){\n      this.executePlayer(player); \n      }.bind(this)\n    );\n  }\n\n  killPlayer(player) {\n    this.setState({victim: player}); \n    var victim = this.state.players.find(p => p.name == player);\n    var index = this.state.players.indexOf(victim);\n\n    if(index > -1) {\n      this.state.players.splice(index, 1);\n    }\n\n    setTimeout(() => {\n      this.setState({Redirect: true}); \n      this.setState(this.state);\n    }, 2000);\n  }\n\n  executePlayer(player) {\n    this.setState({victim: player}); \n    var victim = this.state.players.find(p => p.name == player);\n    var index = this.state.players.indexOf(victim);\n\n    if(index > -1) {\n      this.state.players.splice(index, 1);\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    if (this.state.Redirect) {\n      return <Redirect to={this.state} />\n    }\n    return (\n      <Header title=\"Close Your Eyes\">\n      <img className=\"icon\" src={icon} alt=\"eyes\"/>\n        <p>It is night, time to go to sleep</p>\n      </Header>\n    );\n  }\n}\nCloseEyes.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CloseEyes);","\n// these are required imports\nimport React, { Component } from 'react';\nimport format from '../utils/strings/strings';\n\n// uncomment if you're including the button/textfield/etc components\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\n\n// uncomment if you need these material components\nimport Button  from '@material-ui/core/Button';\nimport Header from '../components/Header';\n\n// more components under component demos here\n// https://material-ui.com/\n\n// required if you're using the material components\nconst styles = theme => ({\n    sampleClassName: {\n    },\n  });\n\n// template -- replace template with the component's name\nclass OpenEyes extends Component {\n    constructor(props) {\n      super(props);\n      this.state = props.location;\n      this.state.pathname = \"/BlankDied\";\n      this.state.Redirect = false;\n    }\n\n  render() {\n    const { classes } = this.props;\n    \n    return (\n      <Header title=\"Open Your Eyes\">\n        <p>Time to wake up</p>\n        <Button variant=\"contained\" component={Link} to={this.state} className={classes.button}>\n          {format(\"global.next.txt\")}\n        </Button>\n      </Header>\n    );\n  }\n}\nOpenEyes.propTypes = {\nclasses: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(OpenEyes);","\n// these are required imports\nimport React, { Component } from 'react';\nimport format from '../utils/strings/strings';\n\n// uncomment if you're including the button/textfield/etc components\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\n\n// uncomment if you need these material components\nimport Button  from '@material-ui/core/Button';\nimport Header from '../components/Header';\n\n// more components under component demos here\n// https://material-ui.com/\n\n// required if you're using the material components\nconst styles = theme => ({\n    sampleClassName: {\n    },\n  });\n\n// template -- replace template with the component's name\nclass OpenEyes extends Component {\n    constructor(props) {\n      super(props);\n      this.state = props.location;\n      this.state.pathname = \"/MafiaVote\";\n    }\n\n  render() {\n    const { classes } = this.props;\n    \n    return (\n      <Header title=\"Open Your Eyes\">\n        <p>Time to wake up</p>\n        <Button variant=\"contained\" component={Link} to={this.state} className={classes.button}>\n          {format(\"global.next.txt\")}\n        </Button>\n      </Header>\n    );\n  }\n}\nOpenEyes.propTypes = {\nclasses: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(OpenEyes);","\n// these are required imports\nimport React, { Component } from 'react';\nimport format from '../utils/strings/strings';\n\n// uncomment if you're including the button/textfield/etc components\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\n\n// uncomment if you need these material components\nimport Button from '@material-ui/core/Button';\nimport Header from '../components/Header';\n\n// more components under component demos here\n// https://material-ui.com/\n\n// required if you're using the material components\nconst styles = theme => ({\n  sampleClassName: {\n  },\n});\n\n// template -- replace template with the component's name\nclass BlankDied extends Component {\n  constructor(props) {\n    super(props);\n    this.state = props.location;\n    this.state.pathname = \"/TownHall\";\n    if (this.state.victim == this.state.name) {\n      this.state.pathname = \"/YouDied\";\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Header title=\"Oh no!\">\n        <p>A tragedy has happened....</p>\n\n        <p>{format(\"lorem\")}</p>\n        <p>{this.state.victim} Has Died!!!!</p>\n        \n        <div className=\"centered-content\">\n          <Button variant=\"contained\" component={Link} to={this.state} className={classes.button}>\n            {format(\"global.next.txt\")}\n          </Button>\n        </div>\n      </Header>\n\n    );\n  }\n}\nBlankDied.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(BlankDied);","\n// these are required imports\nimport React, { Component } from 'react';\nimport format from '../utils/strings/strings';\n\n// uncomment if you're including the button/textfield/etc components\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\n\n// uncomment if you need these material components\nimport Button  from '@material-ui/core/Button';\n//import TextField from '@material-ui/core/TextField';\nimport Header from '../components/Header';\nimport VoteRadioGroup from '../components/VoteRadioGroup';\nimport mockedState from '../utils/mock';\nimport socketIOClient from \"socket.io-client\";\n\n// more components under component demos here\n// https://material-ui.com/\n\n// required if you're using the material components\nconst styles = theme => ({\n    \n  });\n\n// this is required, pathname should be the name of the file this one should point to\n// you should also import it and add a <Route> to Main.js\nconst params = {\n    pathname: \"/TownHall\",\n    name: '',\n    roomowner: true,\n    players: [\n        'jack', 'chloe', 'sindhu', 'zack'\n    ],\n  }\n\n// template -- replace template with the component's name\nclass MafiaVote extends Component {\n  constructor(props) {\n      super(props);\n      this.state = props.location;\n      this.state.pathname = \"/CloseEyes\";\n      this.state.voteOver = true;\n      this.state.Redirect = false;\n      this.handleChange = value => event => {\n        this.setState({\n          [value]: event.target.value,\n        });\n        params.name = event.target.value;\n      };\n  }\n\n  killPlayer = () => {\n    const socket = socketIOClient(format(\"serverURL\"));\n    socket.emit('kill player', this.state.victim); \n  }\n\n  setVictim = (player) => {\n    this.setState({victim: player});\n  }\n\n  render() {\n    const { classes } = this.props;\n    let victims = mockedState(this.props.location).players.slice();\n    var victim = victims.find(p => p.name == this.state.name);\n    var index = victims.indexOf(victim);\n\n    if(index > -1) {\n      victims.splice(index, 1);\n    }\n    \n    return (\n      <div className=\"mafia-vote\">\n        <Header title={format('mafiaVote.title.label')}>\n            <h2 className=\"mafia-vote\">Other Mafia</h2>\n            <p className=\"mafia-vote other-mafia\">\n              David Sprauge\n            </p>\n            <h2 className=\"mafia-vote\">Choose your victim:</h2>\n            \n            <VoteRadioGroup user={this.state.name} players={victims} setVictim={this.setVictim.bind(this)}/>\n            <div className=\"centered-content\">\n            <Button variant=\"contained\" component={Link} to={this.state} className=\"confirm-button\" \n            onClick={() => this.killPlayer()}>Confirm</Button>\n          </div>\n        </Header>\n      </div>\n    );\n  }\n}\nMafiaVote.propTypes = {\nclasses: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MafiaVote);","import React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      endpoint: \"http://2601:18e:c401:aa1:e4c1:f8b4:bc41:494f:4001\",\n      \n      ///\n      color: 'white'\n      ///\n      \n    };\n  }\n\n  // sending sockets\n  send = () => {\n    debugger;\n    const socket = socketIOClient(this.state.endpoint);\n    socket.emit('change color', this.state.color) \n  }\n\n  test = () => {\n    debugger;\n    const socket = socketIOClient(this.state.endpoint);\n    socket.emit('add player', this.state.color) \n  }\n  \n  // adding the function\n  setColor = (color) => {\n    this.setState({ color })\n  }\n\n  render() {\n    // testing for socket connections\n\n    const socket = socketIOClient(this.state.endpoint);\n    socket.on('change color', (col) => {\n      debugger;\n      document.body.style.backgroundColor = col\n    });\n\n    socket.on('add player', (player) => {\n      debugger;\n      document.getElementById(\"text\").innerHTML = \"New text!\";\n    });\n\n\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <button onClick={() => this.send() }>Change Color</button>\n        <button onClick={() => this.test() }>Change Text</button>\n        <button id=\"blue\" onClick={() => this.setColor('blue')}>Blue</button>\n        <button id=\"red\" onClick={() => this.setColor('red')}>Red</button>\n        <p id=\"text\">hey</p>\n      </div>\n    )\n  }\n}\nexport default App;","\n// these are required imports\nimport React, { Component } from 'react';\nimport format from '../utils/strings/strings';\n\n// uncomment if you're including the button/textfield/etc components\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\n\n// uncomment if you need these material components\nimport Button  from '@material-ui/core/Button';\nimport Header from '../components/Header';\nimport './styles.css';\nimport icon from './images/mafia.svg';\n\n// more components under component demos here\n// https://material-ui.com/\n\n// required if you're using the material components\nconst styles = theme => ({\n    sampleClassName: {\n    },\n  });\n\n//template -- replace template with the component's name\nclass MafiaRole extends Component {\n    constructor(props) {\n        super(props);\n        this.state = props.location;\n        this.state.role = 'mafia';\n        this.state.pathname = \"/InitiateGame\";\n    }\n\n  render() {\n    const { classes } = this.props;\n    \n    return (\n      <div className=\"role-assignment\">\n      <Header title={format('roleAssignment.title.label')}>\n      <h3 className=\"role-assignment-title\">A member of the Mafia</h3>\n      <img className=\"icon\" src={icon} alt=\"mafia\"/>\n      <p>{format('mafiaRole.description')}</p>\n      <div className=\"centered-content\">\n        <Button variant=\"contained\" component={Link} to={this.state} className={classes.button}>\n          {format(\"global.next.txt\")}\n        </Button>\n        </div>\n       </Header>\n      </div>\n    );\n  }\n}\nMafiaRole.propTypes = {\nclasses: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MafiaRole);","\n// these are required imports\nimport React, { Component } from 'react';\nimport format from '../utils/strings/strings';\n\n// uncomment if you're including the button/textfield/etc components\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\n\n// uncomment if you need these material components\nimport Button  from '@material-ui/core/Button';\nimport Header from '../components/Header';\nimport './styles.css';\nimport icon from './images/villager.svg';\n\n// more components under component demos here\n// https://material-ui.com/\n\n// required if you're using the material components\nconst styles = theme => ({\n    sampleClassName: {\n    },\n  });\n\n//template -- replace template with the component's name\nclass VillagerRole extends Component {\n    constructor(props) {\n        super(props);\n        this.state = props.location;\n        this.state.role = 'villager';\n        this.state.pathname = \"/InitiateGame\";\n    }\n\n  render() {\n    const { classes } = this.props;\n    \n    return (\n      <div className=\"role-assignment\">\n      <Header title={format('roleAssignment.title.label')}>\n      <h3 className=\"role-assignment-title\">An innocent villager</h3>\n      <img className=\"icon\" src={icon} alt=\"villager\"/>\n      <p>{format('villagerRole.description')}</p>\n      <div className=\"centered-content\">\n        <Button variant=\"contained\" component={Link} to={this.state} className={classes.button}>\n          {format(\"global.next.txt\")}\n        </Button>\n        </div>\n       </Header>\n      </div>\n    );\n  }\n}\nVillagerRole.propTypes = {\nclasses: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(VillagerRole);","\nimport React, { Component } from 'react';\nimport format from '../utils/strings/strings';\nimport Header from '../components/Header';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\n\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText'\n\nconst styles = theme => ({\n  voteBreakdown: {\n  },\n});\n\nclass VoteBreakdown extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { classes } = this.props;\n    var list = [];\n\n    // this currently assumes a player is { name, list of player names that voted against them}\n    // but it should be easy to change this than it is to pass in something that fits that\n    let players = [];//[{name: 'Jack'}, {name: 'Chloe'}, {name: 'zack'}]; \n\n    for (var i = 0; i < players.length; i++) {\n      let votes = \"\";\n      if (players[i].votes.length > 0) {\n        votes = \": \" + players[i].votes.join(', ');\n      }\n      list.push(\n        <ListItem>\n          <ListItemText>{players[i].name + votes}</ListItemText>\n        </ListItem>\n      )\n    }\n    return (\n        <List className=\"vote-list\">\n          {list}\n        </List>\n    );\n  }\n}\nVoteBreakdown.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(VoteBreakdown);","\n// these are required imports\nimport React, { Component } from 'react';\nimport format from '../utils/strings/strings';\n\n// uncomment if you're including the button/textfield/etc components\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\n\n// uncomment if you need these material components\nimport Button from '@material-ui/core/Button';\nimport Header from '../components/Header';\nimport socketIOClient from \"socket.io-client\";\nimport VoteBreakdown from './VoteBreakdown';\n\n// more components under component demos here\n// https://material-ui.com/\n\n// required if you're using the material components\nconst styles = theme => ({\n  sampleClassName: {\n  },\n});\n\nconst mockedDeadPerson = 'Chloe';\n\n// template -- replace template with the component's name\nclass ElectionResults extends Component {\n  constructor(props) {\n    super(props);\n    this.state = props.location;\n    this.state.pathname = \"/CloseEyes\";\n    this.state.fromElection = true;\n    this.hangPlayer = this.hangPlayer.bind(this);\n  }\n\n  componentWillMount() {\n    const socket = socketIOClient(format(\"serverURL\"));\n    socket.on('hang player', function(player){\n      this.hangPlayer(player); \n      }.bind(this)\n    );\n  }\n\n  hangPlayer(player) {\n    //keep track of how many people have voted so we know if everyone has voted\n    this.setState({voterTurnout: this.state.voterTurnout + 1});\n\n    //If there is no frontrunner this is the first ballot. player becomes frontrunner. \n    if (this.state.frontRunner.name == '') {\n      this.setState({frontRunner: {name: player, votes: 1}});\n    }\n\n    //If player already has votes add 1 more. \n    if(player in this.state.tally) {\n      this.state.tally[player] = this.state.tally[player] + 1;\n\n      //Check if player is now frontrunner\n      if(this.state.tally[player] > this.state.frontRunner.votes) {\n        this.setState({frontRunner: {name: player, votes: this.state.tally[player]}});\n      }\n    }\n    else {\n      //If player has no votes either became first frontrunner so just add player to tally\n      this.state.tally[player] = 1;\n    }\n\n    //If they died dont move on\n    if(this.state.frontRunner.name == this.state.name) {\n      this.setState({pathname: \"/YouDied\"});\n    }\n    else {\n      this.setState({pathname: \"/CloseEyes\"});\n    }\n\n    //refresh the views\n    this.setState(this.state);\n  }\n\n  election = () => {\n    if(!this.isGameOver()) {\n      const socket = socketIOClient(format(\"serverURL\"));\n      socket.emit('execute player', this.state.frontRunner.name);\n    } \n  }\n\n  isGameOver = () => {\n    var mafia = this.state.players.find(p => p.role == 'mafia').name;\n\n    if(this.state.frontRunner.name == mafia) {\n      this.state.pathname = \"/GameOver\";\n      this.state.winner = 'villagers';\n      return true;\n    }\n    else if(this.state.players.length <= 4){\n      this.state.pathname = \"/GameOver\";\n      this.state.winner = 'mafia';\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Header title=\"Oh no!\">\n        <p>The Town has decided....</p>\n        {this.state.voterTurnout == this.state.players.length &&\n        <p>{this.state.frontRunner.name} Has Died!!!!</p>\n        }\n\n        <VoteBreakdown></VoteBreakdown>\n        {this.state.voterTurnout == this.state.players.length &&\n          <div className=\"centered-content\">\n            <Button variant=\"contained\" component={Link} to={this.state} className={classes.button}\n            onClick={() => this.election()}>\n              {format(\"global.next.txt\")}\n            </Button>\n          </div>\n        }\n      </Header>\n\n    );\n  }\n}\nElectionResults.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ElectionResults);","\n// these are required imports\nimport React, { Component } from 'react';\nimport format from '../utils/strings/strings';\n\n// uncomment if you're including the button/textfield/etc components\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\n\n// uncomment if you need these material components\nimport Button from '@material-ui/core/Button';\nimport Header from '../components/Header';\n\n// more components under component demos here\n// https://material-ui.com/\n\n// required if you're using the material components\nconst styles = theme => ({\n  sampleClassName: {\n  },\n});\n\n// template -- replace template with the component's name\nclass YouDied extends Component {\n  constructor(props) {\n    super(props);\n    this.state = props.location;\n    this.state.pathname = \"/\";\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Header title=\"You Died\">\n        <p>bummer</p>\n      </Header>\n\n    );\n  }\n}\nYouDied.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(YouDied);","\n// these are required imports\nimport React, { Component } from 'react';\nimport format from '../utils/strings/strings';\n\n// uncomment if you're including the button/textfield/etc components\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\n\n// uncomment if you need these material components\nimport Button from '@material-ui/core/Button';\nimport Header from '../components/Header';\n\n// more components under component demos here\n// https://material-ui.com/\n\n// required if you're using the material components\nconst styles = theme => ({\n  sampleClassName: {\n  },\n});\n\n// template -- replace template with the component's name\nclass GameOver extends Component {\n  constructor(props) {\n    super(props);\n    this.state = props.location;\n    this.state.pathname = \"/\";\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Header title=\"Game Over\">\n        <p>The winner is the {this.state.winner}</p>\n      </Header>\n\n    );\n  }\n}\nGameOver.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(GameOver);","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom'\nimport TaskSelect from './screens/TaskSelect'\nimport CreateRoom from './screens/CreateRoom'\nimport Home from './screens/Home'\nimport JoinRoom from './screens/JoinRoom'\nimport WaitingRoom from './screens/WaitingRoom'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport TownHall from './screens/TownHall';\nimport RoleAssignment from './screens/RoleAssignment';\nimport InitiateGame from './screens/InitiateGame';\nimport CloseEyes from './screens/CloseEyes';\nimport OpenEyes from './screens/OpenEyes';\nimport OpenEyesMafia from './screens/OpenEyesMafia';\nimport BlankDied from './screens/BlankDied';\nimport MafiaVote from './screens/MafiaVote';\nimport App from './App';\nimport MafiaRole from './screens/MafiaRole';\nimport VillagerRole from './screens/VillagerRole';\nimport ElectionResults from './screens/ElectionResults';\nimport YouDied from './screens/YouDied';\nimport GameOver from './screens/GameOver';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n  }\n});\n\nclass Main extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div>\n            <Switch>\n              <Route exact path='/' component={Home} />\n              <Route exact path='/Task' component={TaskSelect} />\n              <Route exact path='/Home' component={Home}/>\n              <Route path='/CreateRoom' component={CreateRoom} />\n              <Route path='/JoinRoom' component={JoinRoom} />\n              <Route path=\"/WaitingRoom\" component={WaitingRoom} />\n              <Route path=\"/TownHall\" component={TownHall} />\n              <Route path=\"/InitiateGame\" component={InitiateGame} />\n              <Route path=\"/RoleAssignment\" component={RoleAssignment} />\n              <Route path=\"/CloseEyes\" component={CloseEyes} />\n              <Route path=\"/OpenEyes\" component={OpenEyes} />\n              <Route path=\"/OpenEyesMafia\" component={OpenEyesMafia} />\n              <Route path=\"/BlankDied\" component={BlankDied} />\n              <Route path=\"/MafiaVote\" component={MafiaVote} />\n              <Route path=\"/SocketTest\" component={App} />\n              <Route path=\"/MafiaRole\" component={MafiaRole} />\n              <Route path=\"/VillagerRole\" component={VillagerRole} />\n              <Route path=\"/ElectionResults\" component={ElectionResults} />\n              <Route path=\"/YouDied\" component={YouDied} />\n              <Route path=\"/GameOver\" component={GameOver} />\n            </Switch>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport Main from './Main';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}>< Main /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/mafia.84202713.svg\";"],"sourceRoot":""}